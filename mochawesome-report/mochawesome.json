{
  "stats": {
    "suites": 6,
    "tests": 25,
    "passes": 25,
    "pending": 0,
    "failures": 0,
    "start": "2021-05-09T05:01:45.139Z",
    "end": "2021-05-09T05:01:45.253Z",
    "duration": 114,
    "testsRegistered": 25,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a9edc4bc-acfd-4b68-bcac-276894cb56a5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9d4a90cb-8009-4798-aa9b-000e18e95d6b",
          "title": "suite",
          "fullFile": "/media/zack/E/codes/mocha/airwallex/test/test.js",
          "file": "/test/test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"suite\"",
              "fullTitle": "suite \"before all\" hook in \"suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('before suite')",
              "err": {},
              "uuid": "e8b7e7cc-b3c9-4e57-8699-dd4acc76c7d3",
              "parentUUID": "9d4a90cb-8009-4798-aa9b-000e18e95d6b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"suite\"",
              "fullTitle": "suite \"after all\" hook in \"suite\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log('after suite')",
              "err": {},
              "uuid": "f55e1cb5-25ee-4bc2-ab6f-dd01e33e10f4",
              "parentUUID": "9d4a90cb-8009-4798-aa9b-000e18e95d6b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7567f1b2-011c-4666-9c82-0ae2adbe2b44",
              "title": "happy pass testing -- test",
              "fullFile": "/media/zack/E/codes/mocha/airwallex/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "case1 - happy pass",
                  "fullTitle": "suite happy pass testing -- test case1 - happy pass",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "6bcbc742-c4b8-4dbe-b6a3-cf147065dfb2",
                  "parentUUID": "7567f1b2-011c-4666-9c82-0ae2adbe2b44",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6bcbc742-c4b8-4dbe-b6a3-cf147065dfb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
              "title": "mandatory testing -- test",
              "fullFile": "/media/zack/E/codes/mocha/airwallex/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "case2 - missing bank_country_code",
                  "fullTitle": "suite mandatory testing -- test case2 - missing bank_country_code",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    delete it.bank_country_code\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"bank_country_code is required\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "1b1b5d2f-f1a6-403f-bb9f-7021aca593b6",
                  "parentUUID": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case3 - missing account_name",
                  "fullTitle": "suite mandatory testing -- test case3 - missing account_name",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    delete it.account_name\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"account_name is required\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "0b4ce455-44f5-406e-a0e8-4c5477989fb2",
                  "parentUUID": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case4 - missing account_number",
                  "fullTitle": "suite mandatory testing -- test case4 - missing account_number",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    delete it.account_number\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"account_number is required\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "f00573e1-80a3-44c7-9386-af3afe899131",
                  "parentUUID": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case5 - missing payment_method",
                  "fullTitle": "suite mandatory testing -- test case5 - missing payment_method",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    delete it.payment_method\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"payment_method is required\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "071436c9-e8be-45ca-8c58-86a7c6bb0d75",
                  "parentUUID": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case6 - missing swift_code when payment_method is SWIFT ",
                  "fullTitle": "suite mandatory testing -- test case6 - missing swift_code when payment_method is SWIFT ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.payment_method = 'SWIFT'\n    delete it.swift_code\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"swift_code is required\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "b3947d01-39bd-4ba7-94e4-b0f6e1760dcd",
                  "parentUUID": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case7 - missing bsb when bank_country_code is AU ",
                  "fullTitle": "suite mandatory testing -- test case7 - missing bsb when bank_country_code is AU ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'AU'\n    delete it.bsb\n    it.account_name = '1234677'\n    it.swift_code = 'ICBCAUBJ'\n    it.account_number = '123456'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"bsb is required\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "1ed3d949-95dd-4c63-8c95-fd7d1069feba",
                  "parentUUID": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case8 - missing aba when bank_country_code is US ",
                  "fullTitle": "suite mandatory testing -- test case8 - missing aba when bank_country_code is US ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'US'\n    delete it.aba\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"aba is required\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "be73bee9-5ef3-4a4b-9272-394013a96640",
                  "parentUUID": "099e4825-709c-4fbb-bf19-76e0f76c42c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b1b5d2f-f1a6-403f-bb9f-7021aca593b6",
                "0b4ce455-44f5-406e-a0e8-4c5477989fb2",
                "f00573e1-80a3-44c7-9386-af3afe899131",
                "071436c9-e8be-45ca-8c58-86a7c6bb0d75",
                "b3947d01-39bd-4ba7-94e4-b0f6e1760dcd",
                "1ed3d949-95dd-4c63-8c95-fd7d1069feba",
                "be73bee9-5ef3-4a4b-9272-394013a96640"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 26,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4730ced8-386f-4943-8fc3-621569cd6970",
              "title": "length testing -- test",
              "fullFile": "/media/zack/E/codes/mocha/airwallex/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "case1 - account name: mandatory, any character, length from 2 to 10 -- short than 2",
                  "fullTitle": "suite length testing -- test case1 - account name: mandatory, any character, length from 2 to 10 -- short than 2",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.account_name = '1'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"account_name length should be from 2 to 10\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "5bcbb45b-31d0-465d-87d8-2ad5f3480684",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case2 - account name: mandatory, any character, length from 2 to 10 -- longer than 10",
                  "fullTitle": "suite length testing -- test case2 - account name: mandatory, any character, length from 2 to 10 -- longer than 10",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.account_name = '12345678901'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"account_name length should be from 2 to 10\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "12c927a0-f85e-43a9-9841-047ffb505d90",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case3 - account name: mandatory, any character, length from 2 to 10 -- equal to 10",
                  "fullTitle": "suite length testing -- test case3 - account name: mandatory, any character, length from 2 to 10 -- equal to 10",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.account_name = '1234567890'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "722a1d05-d169-491f-8d15-e6750be7e0fc",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case4 - account name: mandatory, any character, length from 2 to 10 -- equal to 2",
                  "fullTitle": "suite length testing -- test case4 - account name: mandatory, any character, length from 2 to 10 -- equal to 2",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.account_name = '12'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "4a05fff6-ea3e-4f35-be49-a44678c1cff0",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case５ -　bsb 6 characters when bank_country_code is AU ",
                  "fullTitle": "suite length testing -- test case５ -　bsb 6 characters when bank_country_code is AU ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'AU'\n    it.bsb = '123456'\n    it.account_name = '1234677'\n    it.swift_code = 'ICBCAUBJ'\n    it.account_number = '1234567'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "12dbb00f-83f8-49eb-83fc-b714b1399edf",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case6 - aba 9 characters when bank_country_code is US ",
                  "fullTitle": "suite length testing -- test case6 - aba 9 characters when bank_country_code is US ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'US'\n    it.aba = '123456789'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "d1635b94-b50d-496d-9266-2971aeb507fe",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case７ -　bsb not 6 characters when bank_country_code is AU ",
                  "fullTitle": "suite length testing -- test case７ -　bsb not 6 characters when bank_country_code is AU ",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'AU'\n    it.bsb = '1234567'\n    it.account_name = '1234677'\n    it.swift_code = 'ICBCAUBJ'\n    it.account_number = '1234567'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error.indexOf(\"size should be 6\") >= 0, true)\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "3cc4b06d-9685-4d0e-9b37-75c9a0871867",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case８ - aba not 9 characters when bank_country_code is US ",
                  "fullTitle": "suite length testing -- test case８ - aba not 9 characters when bank_country_code is US ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'US'\n    it.aba = '1234567891'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error.indexOf(\"size should be 9\") >= 0, true)\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "a7f2bca8-226e-4fb6-8370-2c03b9ecc7a3",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case9 - Length of account_number should be between 7 and 11 when bank_country_code is US ",
                  "fullTitle": "suite length testing -- test case9 - Length of account_number should be between 7 and 11 when bank_country_code is US ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'US'\n    it.account_number = '1231231231231231213123123123132123132131asdfasdfasdfasdfasdfsdf'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error,\"Length of account_number should be between 7 and 11 when bank_country_code is 'US'\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "352920b3-2594-49a1-9822-a99a279367e7",
                  "parentUUID": "4730ced8-386f-4943-8fc3-621569cd6970",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bcbb45b-31d0-465d-87d8-2ad5f3480684",
                "12c927a0-f85e-43a9-9841-047ffb505d90",
                "722a1d05-d169-491f-8d15-e6750be7e0fc",
                "4a05fff6-ea3e-4f35-be49-a44678c1cff0",
                "12dbb00f-83f8-49eb-83fc-b714b1399edf",
                "d1635b94-b50d-496d-9266-2971aeb507fe",
                "3cc4b06d-9685-4d0e-9b37-75c9a0871867",
                "a7f2bca8-226e-4fb6-8370-2c03b9ecc7a3",
                "352920b3-2594-49a1-9822-a99a279367e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b56f3449-4b4c-4214-b00d-bcb9b6357741",
              "title": "vocabulary testing -- test",
              "fullFile": "/media/zack/E/codes/mocha/airwallex/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "case1 - payment_method should be either LOCAL or SWIFT, not local or swift",
                  "fullTitle": "suite vocabulary testing -- test case1 - payment_method should be either LOCAL or SWIFT, not local or swift",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.payment_method = 'test'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"payment_method either be LOCAL or SWIFT\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "da9491e6-fe79-4adb-b686-f8730d678910",
                  "parentUUID": "b56f3449-4b4c-4214-b00d-bcb9b6357741",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case2 - payment_method should be either LOCAL or SWIFT. LOCAL ",
                  "fullTitle": "suite vocabulary testing -- test case2 - payment_method should be either LOCAL or SWIFT. LOCAL ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.payment_method = 'LOCAL'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "dbd4d94d-16fa-4099-a87c-872adffdb723",
                  "parentUUID": "b56f3449-4b4c-4214-b00d-bcb9b6357741",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case3 - payment_method should be either LOCAL or SWIFT. SWIFT ",
                  "fullTitle": "suite vocabulary testing -- test case3 - payment_method should be either LOCAL or SWIFT. SWIFT ",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.payment_method = 'SWIFT'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "0584e975-3d7a-490f-aca5-ce34aed65d39",
                  "parentUUID": "b56f3449-4b4c-4214-b00d-bcb9b6357741",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case4 - bank_country_code can be one of US, AU, CN.  -- US",
                  "fullTitle": "suite vocabulary testing -- test case4 - bank_country_code can be one of US, AU, CN.  -- US",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'US'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 200)\n        assert.strictEqual(response.success, \"Bank details saved\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "69e87325-22e6-404f-9177-f467fab77dff",
                  "parentUUID": "b56f3449-4b4c-4214-b00d-bcb9b6357741",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case5 - bank_country_code can be one of US, AU, CN.  -- AU -- account number not fullfilled",
                  "fullTitle": "suite vocabulary testing -- test case5 - bank_country_code can be one of US, AU, CN.  -- AU -- account number not fullfilled",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'AU'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"for AU, account number is 6-9 character long\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "48bdea6c-01a1-47a0-8ccf-40fb5148a677",
                  "parentUUID": "b56f3449-4b4c-4214-b00d-bcb9b6357741",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case6 - bank_country_code can be one of US, AU, CN.  -- CN -- The swift code is not valid for the given bank country code: US",
                  "fullTitle": "suite vocabulary testing -- test case6 - bank_country_code can be one of US, AU, CN.  -- CN -- The swift code is not valid for the given bank country code: US",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.bank_country_code = 'CN'\n    it.account_number = '1234566788'\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"The swift code is not valid for the given bank country code: US\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "6ee943cf-5a1a-42ca-868d-4899fd80c6c1",
                  "parentUUID": "b56f3449-4b4c-4214-b00d-bcb9b6357741",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da9491e6-fe79-4adb-b686-f8730d678910",
                "dbd4d94d-16fa-4099-a87c-872adffdb723",
                "0584e975-3d7a-490f-aca5-ce34aed65d39",
                "69e87325-22e6-404f-9177-f467fab77dff",
                "48bdea6c-01a1-47a0-8ccf-40fb5148a677",
                "6ee943cf-5a1a-42ca-868d-4899fd80c6c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3fce3313-4611-43aa-99e7-e95582623486",
              "title": "exploring testing -- test",
              "fullFile": "/media/zack/E/codes/mocha/airwallex/test/test.js",
              "file": "/test/test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "case1 - too long account name",
                  "fullTitle": "suite exploring testing -- test case1 - too long account name",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.account_name = \"123123123adf!@#SDFDV$@$#%#$DSASD@!#Dvdzafgadfgadfgadsfa1    aqe rrq            56357adsv\"\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"account_name length should be from 2 to 10\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "44ede6c8-c6a5-443f-9cf4-819732f1b754",
                  "parentUUID": "3fce3313-4611-43aa-99e7-e95582623486",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "case2 - empty account name",
                  "fullTitle": "suite exploring testing -- test case2 - empty account name",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var bank = new Bank();\nbank.update((it) => {\n    it.account_name = \"\"\n})\nDriver.call(bank,\n    (statusCode, response) => {\n        assert.strictEqual(statusCode, 400)\n        assert.strictEqual(response.error, \"account_name length should be from 2 to 10\")\n    }, (err) => { err ? done(err) : done() }\n)",
                  "err": {},
                  "uuid": "5182044b-f3e8-42db-889e-993e372e3e06",
                  "parentUUID": "3fce3313-4611-43aa-99e7-e95582623486",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44ede6c8-c6a5-443f-9cf4-819732f1b754",
                "5182044b-f3e8-42db-889e-993e372e3e06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}